# -*- coding: utf-8 -*-
"""the_veggie_life_mat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OUFSZr_zQy130uSFK1Fe1Fu03sQUUOHh
"""

import matplotlib.pyplot as plt
import pandas as pd

datos = pd.read_excel('tvl_final_jhgs.xlsx')
print(datos.head())

print("Cantidad de nulos por columna antes de la eliminación:")
print(datos.isnull().sum())
datos_sin_nulos = datos.dropna()
print("\nCantidad de nulos por columna después de la eliminación:")
print(datos_sin_nulos.isnull().sum())
print("\nPrimeras filas del DataFrame después de eliminar nulos:")
print(datos_sin_nulos.head())
datos_filtrados = datos[datos['Producto'] == "Panela x 3 unidades"]
print("\nDatos filtrados para Panela x 3 unidades:")
print(datos_filtrados.head())
datos_agrupados = datos.groupby('Proveedor')['Ventas Totales'].sum()
print("\nSuma de ventas por Proveedor:")
print(datos_agrupados)

datos['Ventas Totales'] = datos['Ventas Totales'].astype(str).str.replace(',', '', regex=False)
datos['Ventas Totales'] = pd.to_numeric(datos['Ventas Totales'])
total_sales_by_product = datos.groupby('Producto')['Ventas Totales'].sum().reset_index()
plt.figure(figsize=(10, 6))
plt.bar(total_sales_by_product['Producto'], total_sales_by_product['Ventas Totales'])
plt.xlabel('Producto')
plt.ylabel('Ventas Totales')
plt.title('Ventas Totales por Producto')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.savefig('ventas_totales_por_producto_tvl2024.png')
plt.show()

import matplotlib.pyplot as plt
import pandas as pd
datos_ventas = pd.read_excel('tvl_final_jhgs.xlsx')
datos_ventas['Fecha de Factura'] = pd.to_datetime(datos_ventas['Fecha de Factura'])
datos_ventas['Ventas Totales'] = datos_ventas['Ventas Totales'].astype(str).str.replace(',', '').str.replace('$', '')
datos_ventas['Ventas Totales'] = pd.to_numeric(datos_ventas['Ventas Totales'])
datos_ventas['Beneficio Operativo'] = datos_ventas['Beneficio Operativo'].astype(str).str.replace(',', '').str.replace('$', '')
datos_ventas['Beneficio Operativo'] = pd.to_numeric(datos_ventas['Beneficio Operativo'])
print(datos_ventas.head())

ventas_por_proveedor = datos_ventas.groupby('Proveedor')['Ventas Totales'].sum()
plt.figure(figsize=(10, 5))
plt.bar(ventas_por_proveedor.index, ventas_por_proveedor.values)
plt.title('Ventas Totales por Proveedor de The Veggie Life 2024')
plt.xlabel('Proveedor')
plt.ylabel('Ventas Totales')
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.savefig('ventas_totales_por_proveedor_tvl2024.png')
plt.show()

ventas_por_metodo = datos_ventas.groupby('Metodo de Venta')['Ventas Totales'].sum()
plt.figure(figsize=(8, 5))
plt.bar(ventas_por_metodo.index, ventas_por_metodo.values)
plt.title('Ventas Totales por Método de Venta')
plt.xlabel('Método de Venta')
plt.ylabel('Ventas Totales')
plt.savefig('ventas_totales_segun_metodo_tvl2024.png')
plt.show()

ventas_por_fecha = datos_ventas.groupby(datos_ventas['Fecha de Factura'].dt.date)['Ventas Totales'].sum()
plt.figure(figsize=(12, 6))
plt.plot(ventas_por_fecha.index, ventas_por_fecha.values, marker='o', linestyle='-')
plt.title('Tendencia de Ventas de Productos Orgánicos de The Veggie Life a lo largo del año 2024')
plt.xlabel('Fecha')
plt.ylabel('Ventas Totales')
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.savefig('ventas_totales_durante_el_tiempo_tvl2024.png')
plt.show()